// source: TursomMsg.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
goog.exportSymbol('proto.cn.tursom.im.protobuf.AllocateNodeRequest', null, global);
goog.exportSymbol('proto.cn.tursom.im.protobuf.AllocateNodeResponse', null, global);
goog.exportSymbol('proto.cn.tursom.im.protobuf.Broadcast', null, global);
goog.exportSymbol('proto.cn.tursom.im.protobuf.ChatMsg', null, global);
goog.exportSymbol('proto.cn.tursom.im.protobuf.FailType', null, global);
goog.exportSymbol('proto.cn.tursom.im.protobuf.ImMsg', null, global);
goog.exportSymbol('proto.cn.tursom.im.protobuf.ImMsg.ContentCase', null, global);
goog.exportSymbol('proto.cn.tursom.im.protobuf.ListenBroadcastRequest', null, global);
goog.exportSymbol('proto.cn.tursom.im.protobuf.ListenBroadcastResponse', null, global);
goog.exportSymbol('proto.cn.tursom.im.protobuf.LoginRequest', null, global);
goog.exportSymbol('proto.cn.tursom.im.protobuf.LoginResult', null, global);
goog.exportSymbol('proto.cn.tursom.im.protobuf.MsgContent', null, global);
goog.exportSymbol('proto.cn.tursom.im.protobuf.MsgContent.ContentCase', null, global);
goog.exportSymbol('proto.cn.tursom.im.protobuf.SendBroadcastRequest', null, global);
goog.exportSymbol('proto.cn.tursom.im.protobuf.SendBroadcastResponse', null, global);
goog.exportSymbol('proto.cn.tursom.im.protobuf.SendMsgRequest', null, global);
goog.exportSymbol('proto.cn.tursom.im.protobuf.SendMsgResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cn.tursom.im.protobuf.ImMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cn.tursom.im.protobuf.ImMsg.oneofGroups_);
};
goog.inherits(proto.cn.tursom.im.protobuf.ImMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cn.tursom.im.protobuf.ImMsg.displayName = 'proto.cn.tursom.im.protobuf.ImMsg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cn.tursom.im.protobuf.LoginRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cn.tursom.im.protobuf.LoginRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cn.tursom.im.protobuf.LoginRequest.displayName = 'proto.cn.tursom.im.protobuf.LoginRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cn.tursom.im.protobuf.LoginResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cn.tursom.im.protobuf.LoginResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cn.tursom.im.protobuf.LoginResult.displayName = 'proto.cn.tursom.im.protobuf.LoginResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cn.tursom.im.protobuf.MsgContent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cn.tursom.im.protobuf.MsgContent.oneofGroups_);
};
goog.inherits(proto.cn.tursom.im.protobuf.MsgContent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cn.tursom.im.protobuf.MsgContent.displayName = 'proto.cn.tursom.im.protobuf.MsgContent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cn.tursom.im.protobuf.SendMsgRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cn.tursom.im.protobuf.SendMsgRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cn.tursom.im.protobuf.SendMsgRequest.displayName = 'proto.cn.tursom.im.protobuf.SendMsgRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cn.tursom.im.protobuf.SendMsgResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cn.tursom.im.protobuf.SendMsgResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cn.tursom.im.protobuf.SendMsgResponse.displayName = 'proto.cn.tursom.im.protobuf.SendMsgResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cn.tursom.im.protobuf.ChatMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cn.tursom.im.protobuf.ChatMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cn.tursom.im.protobuf.ChatMsg.displayName = 'proto.cn.tursom.im.protobuf.ChatMsg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cn.tursom.im.protobuf.AllocateNodeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cn.tursom.im.protobuf.AllocateNodeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cn.tursom.im.protobuf.AllocateNodeRequest.displayName = 'proto.cn.tursom.im.protobuf.AllocateNodeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cn.tursom.im.protobuf.AllocateNodeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cn.tursom.im.protobuf.AllocateNodeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cn.tursom.im.protobuf.AllocateNodeResponse.displayName = 'proto.cn.tursom.im.protobuf.AllocateNodeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cn.tursom.im.protobuf.ListenBroadcastRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cn.tursom.im.protobuf.ListenBroadcastRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cn.tursom.im.protobuf.ListenBroadcastRequest.displayName = 'proto.cn.tursom.im.protobuf.ListenBroadcastRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cn.tursom.im.protobuf.ListenBroadcastResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cn.tursom.im.protobuf.ListenBroadcastResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cn.tursom.im.protobuf.ListenBroadcastResponse.displayName = 'proto.cn.tursom.im.protobuf.ListenBroadcastResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cn.tursom.im.protobuf.SendBroadcastRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cn.tursom.im.protobuf.SendBroadcastRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cn.tursom.im.protobuf.SendBroadcastRequest.displayName = 'proto.cn.tursom.im.protobuf.SendBroadcastRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cn.tursom.im.protobuf.SendBroadcastResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cn.tursom.im.protobuf.SendBroadcastResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cn.tursom.im.protobuf.SendBroadcastResponse.displayName = 'proto.cn.tursom.im.protobuf.SendBroadcastResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cn.tursom.im.protobuf.Broadcast = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cn.tursom.im.protobuf.Broadcast, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cn.tursom.im.protobuf.Broadcast.displayName = 'proto.cn.tursom.im.protobuf.Broadcast';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cn.tursom.im.protobuf.ImMsg.oneofGroups_ = [[2,3,4,5,6,8,9,10,11,12,13,14,15]];

/**
 * @enum {number}
 */
proto.cn.tursom.im.protobuf.ImMsg.ContentCase = {
  CONTENT_NOT_SET: 0,
  LOGINREQUEST: 2,
  LOGINRESULT: 3,
  CHATMSG: 4,
  SENDMSGREQUEST: 5,
  SENDMSGRESPONSE: 6,
  HEARTBEAT: 8,
  ALLOCATENODEREQUEST: 9,
  ALLOCATENODERESPONSE: 10,
  LISTENBROADCASTREQUEST: 11,
  LISTENBROADCASTRESPONSE: 12,
  SENDBROADCASTREQUEST: 13,
  SENDBROADCASTRESPONSE: 14,
  BROADCAST: 15
};

/**
 * @return {proto.cn.tursom.im.protobuf.ImMsg.ContentCase}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.getContentCase = function() {
  return /** @type {proto.cn.tursom.im.protobuf.ImMsg.ContentCase} */(jspb.Message.computeOneofCase(this, proto.cn.tursom.im.protobuf.ImMsg.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.cn.tursom.im.protobuf.ImMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cn.tursom.im.protobuf.ImMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.ImMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    msgid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selfmsg: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    loginrequest: (f = msg.getLoginrequest()) && proto.cn.tursom.im.protobuf.LoginRequest.toObject(includeInstance, f),
    loginresult: (f = msg.getLoginresult()) && proto.cn.tursom.im.protobuf.LoginResult.toObject(includeInstance, f),
    chatmsg: (f = msg.getChatmsg()) && proto.cn.tursom.im.protobuf.ChatMsg.toObject(includeInstance, f),
    sendmsgrequest: (f = msg.getSendmsgrequest()) && proto.cn.tursom.im.protobuf.SendMsgRequest.toObject(includeInstance, f),
    sendmsgresponse: (f = msg.getSendmsgresponse()) && proto.cn.tursom.im.protobuf.SendMsgResponse.toObject(includeInstance, f),
    heartbeat: jspb.Message.getFieldWithDefault(msg, 8, ""),
    allocatenoderequest: (f = msg.getAllocatenoderequest()) && proto.cn.tursom.im.protobuf.AllocateNodeRequest.toObject(includeInstance, f),
    allocatenoderesponse: (f = msg.getAllocatenoderesponse()) && proto.cn.tursom.im.protobuf.AllocateNodeResponse.toObject(includeInstance, f),
    listenbroadcastrequest: (f = msg.getListenbroadcastrequest()) && proto.cn.tursom.im.protobuf.ListenBroadcastRequest.toObject(includeInstance, f),
    listenbroadcastresponse: (f = msg.getListenbroadcastresponse()) && proto.cn.tursom.im.protobuf.ListenBroadcastResponse.toObject(includeInstance, f),
    sendbroadcastrequest: (f = msg.getSendbroadcastrequest()) && proto.cn.tursom.im.protobuf.SendBroadcastRequest.toObject(includeInstance, f),
    sendbroadcastresponse: (f = msg.getSendbroadcastresponse()) && proto.cn.tursom.im.protobuf.SendBroadcastResponse.toObject(includeInstance, f),
    broadcast: (f = msg.getBroadcast()) && proto.cn.tursom.im.protobuf.Broadcast.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cn.tursom.im.protobuf.ImMsg}
 */
proto.cn.tursom.im.protobuf.ImMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cn.tursom.im.protobuf.ImMsg;
  return proto.cn.tursom.im.protobuf.ImMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cn.tursom.im.protobuf.ImMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cn.tursom.im.protobuf.ImMsg}
 */
proto.cn.tursom.im.protobuf.ImMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsgid(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSelfmsg(value);
      break;
    case 2:
      var value = new proto.cn.tursom.im.protobuf.LoginRequest;
      reader.readMessage(value,proto.cn.tursom.im.protobuf.LoginRequest.deserializeBinaryFromReader);
      msg.setLoginrequest(value);
      break;
    case 3:
      var value = new proto.cn.tursom.im.protobuf.LoginResult;
      reader.readMessage(value,proto.cn.tursom.im.protobuf.LoginResult.deserializeBinaryFromReader);
      msg.setLoginresult(value);
      break;
    case 4:
      var value = new proto.cn.tursom.im.protobuf.ChatMsg;
      reader.readMessage(value,proto.cn.tursom.im.protobuf.ChatMsg.deserializeBinaryFromReader);
      msg.setChatmsg(value);
      break;
    case 5:
      var value = new proto.cn.tursom.im.protobuf.SendMsgRequest;
      reader.readMessage(value,proto.cn.tursom.im.protobuf.SendMsgRequest.deserializeBinaryFromReader);
      msg.setSendmsgrequest(value);
      break;
    case 6:
      var value = new proto.cn.tursom.im.protobuf.SendMsgResponse;
      reader.readMessage(value,proto.cn.tursom.im.protobuf.SendMsgResponse.deserializeBinaryFromReader);
      msg.setSendmsgresponse(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeartbeat(value);
      break;
    case 9:
      var value = new proto.cn.tursom.im.protobuf.AllocateNodeRequest;
      reader.readMessage(value,proto.cn.tursom.im.protobuf.AllocateNodeRequest.deserializeBinaryFromReader);
      msg.setAllocatenoderequest(value);
      break;
    case 10:
      var value = new proto.cn.tursom.im.protobuf.AllocateNodeResponse;
      reader.readMessage(value,proto.cn.tursom.im.protobuf.AllocateNodeResponse.deserializeBinaryFromReader);
      msg.setAllocatenoderesponse(value);
      break;
    case 11:
      var value = new proto.cn.tursom.im.protobuf.ListenBroadcastRequest;
      reader.readMessage(value,proto.cn.tursom.im.protobuf.ListenBroadcastRequest.deserializeBinaryFromReader);
      msg.setListenbroadcastrequest(value);
      break;
    case 12:
      var value = new proto.cn.tursom.im.protobuf.ListenBroadcastResponse;
      reader.readMessage(value,proto.cn.tursom.im.protobuf.ListenBroadcastResponse.deserializeBinaryFromReader);
      msg.setListenbroadcastresponse(value);
      break;
    case 13:
      var value = new proto.cn.tursom.im.protobuf.SendBroadcastRequest;
      reader.readMessage(value,proto.cn.tursom.im.protobuf.SendBroadcastRequest.deserializeBinaryFromReader);
      msg.setSendbroadcastrequest(value);
      break;
    case 14:
      var value = new proto.cn.tursom.im.protobuf.SendBroadcastResponse;
      reader.readMessage(value,proto.cn.tursom.im.protobuf.SendBroadcastResponse.deserializeBinaryFromReader);
      msg.setSendbroadcastresponse(value);
      break;
    case 15:
      var value = new proto.cn.tursom.im.protobuf.Broadcast;
      reader.readMessage(value,proto.cn.tursom.im.protobuf.Broadcast.deserializeBinaryFromReader);
      msg.setBroadcast(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cn.tursom.im.protobuf.ImMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cn.tursom.im.protobuf.ImMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.ImMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsgid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelfmsg();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getLoginrequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cn.tursom.im.protobuf.LoginRequest.serializeBinaryToWriter
    );
  }
  f = message.getLoginresult();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cn.tursom.im.protobuf.LoginResult.serializeBinaryToWriter
    );
  }
  f = message.getChatmsg();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cn.tursom.im.protobuf.ChatMsg.serializeBinaryToWriter
    );
  }
  f = message.getSendmsgrequest();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cn.tursom.im.protobuf.SendMsgRequest.serializeBinaryToWriter
    );
  }
  f = message.getSendmsgresponse();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.cn.tursom.im.protobuf.SendMsgResponse.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getAllocatenoderequest();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.cn.tursom.im.protobuf.AllocateNodeRequest.serializeBinaryToWriter
    );
  }
  f = message.getAllocatenoderesponse();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.cn.tursom.im.protobuf.AllocateNodeResponse.serializeBinaryToWriter
    );
  }
  f = message.getListenbroadcastrequest();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.cn.tursom.im.protobuf.ListenBroadcastRequest.serializeBinaryToWriter
    );
  }
  f = message.getListenbroadcastresponse();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.cn.tursom.im.protobuf.ListenBroadcastResponse.serializeBinaryToWriter
    );
  }
  f = message.getSendbroadcastrequest();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.cn.tursom.im.protobuf.SendBroadcastRequest.serializeBinaryToWriter
    );
  }
  f = message.getSendbroadcastresponse();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.cn.tursom.im.protobuf.SendBroadcastResponse.serializeBinaryToWriter
    );
  }
  f = message.getBroadcast();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.cn.tursom.im.protobuf.Broadcast.serializeBinaryToWriter
    );
  }
};


/**
 * optional string msgId = 1;
 * @return {string}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.getMsgid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.setMsgid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool selfMsg = 7;
 * @return {boolean}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.getSelfmsg = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.setSelfmsg = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional LoginRequest loginRequest = 2;
 * @return {?proto.cn.tursom.im.protobuf.LoginRequest}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.getLoginrequest = function() {
  return /** @type{?proto.cn.tursom.im.protobuf.LoginRequest} */ (
    jspb.Message.getWrapperField(this, proto.cn.tursom.im.protobuf.LoginRequest, 2));
};


/**
 * @param {?proto.cn.tursom.im.protobuf.LoginRequest|undefined} value
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
*/
proto.cn.tursom.im.protobuf.ImMsg.prototype.setLoginrequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.cn.tursom.im.protobuf.ImMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.clearLoginrequest = function() {
  return this.setLoginrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.hasLoginrequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LoginResult loginResult = 3;
 * @return {?proto.cn.tursom.im.protobuf.LoginResult}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.getLoginresult = function() {
  return /** @type{?proto.cn.tursom.im.protobuf.LoginResult} */ (
    jspb.Message.getWrapperField(this, proto.cn.tursom.im.protobuf.LoginResult, 3));
};


/**
 * @param {?proto.cn.tursom.im.protobuf.LoginResult|undefined} value
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
*/
proto.cn.tursom.im.protobuf.ImMsg.prototype.setLoginresult = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.cn.tursom.im.protobuf.ImMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.clearLoginresult = function() {
  return this.setLoginresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.hasLoginresult = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ChatMsg chatMsg = 4;
 * @return {?proto.cn.tursom.im.protobuf.ChatMsg}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.getChatmsg = function() {
  return /** @type{?proto.cn.tursom.im.protobuf.ChatMsg} */ (
    jspb.Message.getWrapperField(this, proto.cn.tursom.im.protobuf.ChatMsg, 4));
};


/**
 * @param {?proto.cn.tursom.im.protobuf.ChatMsg|undefined} value
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
*/
proto.cn.tursom.im.protobuf.ImMsg.prototype.setChatmsg = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.cn.tursom.im.protobuf.ImMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.clearChatmsg = function() {
  return this.setChatmsg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.hasChatmsg = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional SendMsgRequest sendMsgRequest = 5;
 * @return {?proto.cn.tursom.im.protobuf.SendMsgRequest}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.getSendmsgrequest = function() {
  return /** @type{?proto.cn.tursom.im.protobuf.SendMsgRequest} */ (
    jspb.Message.getWrapperField(this, proto.cn.tursom.im.protobuf.SendMsgRequest, 5));
};


/**
 * @param {?proto.cn.tursom.im.protobuf.SendMsgRequest|undefined} value
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
*/
proto.cn.tursom.im.protobuf.ImMsg.prototype.setSendmsgrequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.cn.tursom.im.protobuf.ImMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.clearSendmsgrequest = function() {
  return this.setSendmsgrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.hasSendmsgrequest = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional SendMsgResponse sendMsgResponse = 6;
 * @return {?proto.cn.tursom.im.protobuf.SendMsgResponse}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.getSendmsgresponse = function() {
  return /** @type{?proto.cn.tursom.im.protobuf.SendMsgResponse} */ (
    jspb.Message.getWrapperField(this, proto.cn.tursom.im.protobuf.SendMsgResponse, 6));
};


/**
 * @param {?proto.cn.tursom.im.protobuf.SendMsgResponse|undefined} value
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
*/
proto.cn.tursom.im.protobuf.ImMsg.prototype.setSendmsgresponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.cn.tursom.im.protobuf.ImMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.clearSendmsgresponse = function() {
  return this.setSendmsgresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.hasSendmsgresponse = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string heartBeat = 8;
 * @return {string}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.getHeartbeat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.setHeartbeat = function(value) {
  return jspb.Message.setOneofField(this, 8, proto.cn.tursom.im.protobuf.ImMsg.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.clearHeartbeat = function() {
  return jspb.Message.setOneofField(this, 8, proto.cn.tursom.im.protobuf.ImMsg.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.hasHeartbeat = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional AllocateNodeRequest allocateNodeRequest = 9;
 * @return {?proto.cn.tursom.im.protobuf.AllocateNodeRequest}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.getAllocatenoderequest = function() {
  return /** @type{?proto.cn.tursom.im.protobuf.AllocateNodeRequest} */ (
    jspb.Message.getWrapperField(this, proto.cn.tursom.im.protobuf.AllocateNodeRequest, 9));
};


/**
 * @param {?proto.cn.tursom.im.protobuf.AllocateNodeRequest|undefined} value
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
*/
proto.cn.tursom.im.protobuf.ImMsg.prototype.setAllocatenoderequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.cn.tursom.im.protobuf.ImMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.clearAllocatenoderequest = function() {
  return this.setAllocatenoderequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.hasAllocatenoderequest = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional AllocateNodeResponse allocateNodeResponse = 10;
 * @return {?proto.cn.tursom.im.protobuf.AllocateNodeResponse}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.getAllocatenoderesponse = function() {
  return /** @type{?proto.cn.tursom.im.protobuf.AllocateNodeResponse} */ (
    jspb.Message.getWrapperField(this, proto.cn.tursom.im.protobuf.AllocateNodeResponse, 10));
};


/**
 * @param {?proto.cn.tursom.im.protobuf.AllocateNodeResponse|undefined} value
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
*/
proto.cn.tursom.im.protobuf.ImMsg.prototype.setAllocatenoderesponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.cn.tursom.im.protobuf.ImMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.clearAllocatenoderesponse = function() {
  return this.setAllocatenoderesponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.hasAllocatenoderesponse = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ListenBroadcastRequest listenBroadcastRequest = 11;
 * @return {?proto.cn.tursom.im.protobuf.ListenBroadcastRequest}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.getListenbroadcastrequest = function() {
  return /** @type{?proto.cn.tursom.im.protobuf.ListenBroadcastRequest} */ (
    jspb.Message.getWrapperField(this, proto.cn.tursom.im.protobuf.ListenBroadcastRequest, 11));
};


/**
 * @param {?proto.cn.tursom.im.protobuf.ListenBroadcastRequest|undefined} value
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
*/
proto.cn.tursom.im.protobuf.ImMsg.prototype.setListenbroadcastrequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.cn.tursom.im.protobuf.ImMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.clearListenbroadcastrequest = function() {
  return this.setListenbroadcastrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.hasListenbroadcastrequest = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional ListenBroadcastResponse listenBroadcastResponse = 12;
 * @return {?proto.cn.tursom.im.protobuf.ListenBroadcastResponse}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.getListenbroadcastresponse = function() {
  return /** @type{?proto.cn.tursom.im.protobuf.ListenBroadcastResponse} */ (
    jspb.Message.getWrapperField(this, proto.cn.tursom.im.protobuf.ListenBroadcastResponse, 12));
};


/**
 * @param {?proto.cn.tursom.im.protobuf.ListenBroadcastResponse|undefined} value
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
*/
proto.cn.tursom.im.protobuf.ImMsg.prototype.setListenbroadcastresponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.cn.tursom.im.protobuf.ImMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.clearListenbroadcastresponse = function() {
  return this.setListenbroadcastresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.hasListenbroadcastresponse = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional SendBroadcastRequest sendBroadcastRequest = 13;
 * @return {?proto.cn.tursom.im.protobuf.SendBroadcastRequest}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.getSendbroadcastrequest = function() {
  return /** @type{?proto.cn.tursom.im.protobuf.SendBroadcastRequest} */ (
    jspb.Message.getWrapperField(this, proto.cn.tursom.im.protobuf.SendBroadcastRequest, 13));
};


/**
 * @param {?proto.cn.tursom.im.protobuf.SendBroadcastRequest|undefined} value
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
*/
proto.cn.tursom.im.protobuf.ImMsg.prototype.setSendbroadcastrequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.cn.tursom.im.protobuf.ImMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.clearSendbroadcastrequest = function() {
  return this.setSendbroadcastrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.hasSendbroadcastrequest = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional SendBroadcastResponse sendBroadcastResponse = 14;
 * @return {?proto.cn.tursom.im.protobuf.SendBroadcastResponse}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.getSendbroadcastresponse = function() {
  return /** @type{?proto.cn.tursom.im.protobuf.SendBroadcastResponse} */ (
    jspb.Message.getWrapperField(this, proto.cn.tursom.im.protobuf.SendBroadcastResponse, 14));
};


/**
 * @param {?proto.cn.tursom.im.protobuf.SendBroadcastResponse|undefined} value
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
*/
proto.cn.tursom.im.protobuf.ImMsg.prototype.setSendbroadcastresponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.cn.tursom.im.protobuf.ImMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.clearSendbroadcastresponse = function() {
  return this.setSendbroadcastresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.hasSendbroadcastresponse = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional Broadcast broadcast = 15;
 * @return {?proto.cn.tursom.im.protobuf.Broadcast}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.getBroadcast = function() {
  return /** @type{?proto.cn.tursom.im.protobuf.Broadcast} */ (
    jspb.Message.getWrapperField(this, proto.cn.tursom.im.protobuf.Broadcast, 15));
};


/**
 * @param {?proto.cn.tursom.im.protobuf.Broadcast|undefined} value
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
*/
proto.cn.tursom.im.protobuf.ImMsg.prototype.setBroadcast = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.cn.tursom.im.protobuf.ImMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cn.tursom.im.protobuf.ImMsg} returns this
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.clearBroadcast = function() {
  return this.setBroadcast(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cn.tursom.im.protobuf.ImMsg.prototype.hasBroadcast = function() {
  return jspb.Message.getField(this, 15) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cn.tursom.im.protobuf.LoginRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cn.tursom.im.protobuf.LoginRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cn.tursom.im.protobuf.LoginRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.LoginRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cn.tursom.im.protobuf.LoginRequest}
 */
proto.cn.tursom.im.protobuf.LoginRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cn.tursom.im.protobuf.LoginRequest;
  return proto.cn.tursom.im.protobuf.LoginRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cn.tursom.im.protobuf.LoginRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cn.tursom.im.protobuf.LoginRequest}
 */
proto.cn.tursom.im.protobuf.LoginRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cn.tursom.im.protobuf.LoginRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cn.tursom.im.protobuf.LoginRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cn.tursom.im.protobuf.LoginRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.LoginRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.cn.tursom.im.protobuf.LoginRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cn.tursom.im.protobuf.LoginRequest} returns this
 */
proto.cn.tursom.im.protobuf.LoginRequest.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cn.tursom.im.protobuf.LoginResult.prototype.toObject = function(opt_includeInstance) {
  return proto.cn.tursom.im.protobuf.LoginResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cn.tursom.im.protobuf.LoginResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.LoginResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    imuserid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cn.tursom.im.protobuf.LoginResult}
 */
proto.cn.tursom.im.protobuf.LoginResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cn.tursom.im.protobuf.LoginResult;
  return proto.cn.tursom.im.protobuf.LoginResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cn.tursom.im.protobuf.LoginResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cn.tursom.im.protobuf.LoginResult}
 */
proto.cn.tursom.im.protobuf.LoginResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setImuserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cn.tursom.im.protobuf.LoginResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cn.tursom.im.protobuf.LoginResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cn.tursom.im.protobuf.LoginResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.LoginResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getImuserid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.cn.tursom.im.protobuf.LoginResult.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cn.tursom.im.protobuf.LoginResult} returns this
 */
proto.cn.tursom.im.protobuf.LoginResult.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string imUserId = 2;
 * @return {string}
 */
proto.cn.tursom.im.protobuf.LoginResult.prototype.getImuserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cn.tursom.im.protobuf.LoginResult} returns this
 */
proto.cn.tursom.im.protobuf.LoginResult.prototype.setImuserid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cn.tursom.im.protobuf.MsgContent.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.cn.tursom.im.protobuf.MsgContent.ContentCase = {
  CONTENT_NOT_SET: 0,
  MSG: 1,
  EXT: 2
};

/**
 * @return {proto.cn.tursom.im.protobuf.MsgContent.ContentCase}
 */
proto.cn.tursom.im.protobuf.MsgContent.prototype.getContentCase = function() {
  return /** @type {proto.cn.tursom.im.protobuf.MsgContent.ContentCase} */(jspb.Message.computeOneofCase(this, proto.cn.tursom.im.protobuf.MsgContent.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cn.tursom.im.protobuf.MsgContent.prototype.toObject = function(opt_includeInstance) {
  return proto.cn.tursom.im.protobuf.MsgContent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cn.tursom.im.protobuf.MsgContent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.MsgContent.toObject = function(includeInstance, msg) {
  var f, obj = {
    msg: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ext: (f = msg.getExt()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cn.tursom.im.protobuf.MsgContent}
 */
proto.cn.tursom.im.protobuf.MsgContent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cn.tursom.im.protobuf.MsgContent;
  return proto.cn.tursom.im.protobuf.MsgContent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cn.tursom.im.protobuf.MsgContent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cn.tursom.im.protobuf.MsgContent}
 */
proto.cn.tursom.im.protobuf.MsgContent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    case 2:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setExt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cn.tursom.im.protobuf.MsgContent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cn.tursom.im.protobuf.MsgContent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cn.tursom.im.protobuf.MsgContent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.MsgContent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExt();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional string msg = 1;
 * @return {string}
 */
proto.cn.tursom.im.protobuf.MsgContent.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cn.tursom.im.protobuf.MsgContent} returns this
 */
proto.cn.tursom.im.protobuf.MsgContent.prototype.setMsg = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.cn.tursom.im.protobuf.MsgContent.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cn.tursom.im.protobuf.MsgContent} returns this
 */
proto.cn.tursom.im.protobuf.MsgContent.prototype.clearMsg = function() {
  return jspb.Message.setOneofField(this, 1, proto.cn.tursom.im.protobuf.MsgContent.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cn.tursom.im.protobuf.MsgContent.prototype.hasMsg = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Any ext = 2;
 * @return {?proto.google.protobuf.Any}
 */
proto.cn.tursom.im.protobuf.MsgContent.prototype.getExt = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 2));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.cn.tursom.im.protobuf.MsgContent} returns this
*/
proto.cn.tursom.im.protobuf.MsgContent.prototype.setExt = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.cn.tursom.im.protobuf.MsgContent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cn.tursom.im.protobuf.MsgContent} returns this
 */
proto.cn.tursom.im.protobuf.MsgContent.prototype.clearExt = function() {
  return this.setExt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cn.tursom.im.protobuf.MsgContent.prototype.hasExt = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cn.tursom.im.protobuf.SendMsgRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cn.tursom.im.protobuf.SendMsgRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cn.tursom.im.protobuf.SendMsgRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.SendMsgRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    receiver: jspb.Message.getFieldWithDefault(msg, 1, ""),
    reqid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    content: (f = msg.getContent()) && proto.cn.tursom.im.protobuf.MsgContent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cn.tursom.im.protobuf.SendMsgRequest}
 */
proto.cn.tursom.im.protobuf.SendMsgRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cn.tursom.im.protobuf.SendMsgRequest;
  return proto.cn.tursom.im.protobuf.SendMsgRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cn.tursom.im.protobuf.SendMsgRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cn.tursom.im.protobuf.SendMsgRequest}
 */
proto.cn.tursom.im.protobuf.SendMsgRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiver(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReqid(value);
      break;
    case 3:
      var value = new proto.cn.tursom.im.protobuf.MsgContent;
      reader.readMessage(value,proto.cn.tursom.im.protobuf.MsgContent.deserializeBinaryFromReader);
      msg.setContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cn.tursom.im.protobuf.SendMsgRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cn.tursom.im.protobuf.SendMsgRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cn.tursom.im.protobuf.SendMsgRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.SendMsgRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReceiver();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReqid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContent();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cn.tursom.im.protobuf.MsgContent.serializeBinaryToWriter
    );
  }
};


/**
 * optional string receiver = 1;
 * @return {string}
 */
proto.cn.tursom.im.protobuf.SendMsgRequest.prototype.getReceiver = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cn.tursom.im.protobuf.SendMsgRequest} returns this
 */
proto.cn.tursom.im.protobuf.SendMsgRequest.prototype.setReceiver = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string reqId = 2;
 * @return {string}
 */
proto.cn.tursom.im.protobuf.SendMsgRequest.prototype.getReqid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cn.tursom.im.protobuf.SendMsgRequest} returns this
 */
proto.cn.tursom.im.protobuf.SendMsgRequest.prototype.setReqid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional MsgContent content = 3;
 * @return {?proto.cn.tursom.im.protobuf.MsgContent}
 */
proto.cn.tursom.im.protobuf.SendMsgRequest.prototype.getContent = function() {
  return /** @type{?proto.cn.tursom.im.protobuf.MsgContent} */ (
    jspb.Message.getWrapperField(this, proto.cn.tursom.im.protobuf.MsgContent, 3));
};


/**
 * @param {?proto.cn.tursom.im.protobuf.MsgContent|undefined} value
 * @return {!proto.cn.tursom.im.protobuf.SendMsgRequest} returns this
*/
proto.cn.tursom.im.protobuf.SendMsgRequest.prototype.setContent = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cn.tursom.im.protobuf.SendMsgRequest} returns this
 */
proto.cn.tursom.im.protobuf.SendMsgRequest.prototype.clearContent = function() {
  return this.setContent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cn.tursom.im.protobuf.SendMsgRequest.prototype.hasContent = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cn.tursom.im.protobuf.SendMsgResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cn.tursom.im.protobuf.SendMsgResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cn.tursom.im.protobuf.SendMsgResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.SendMsgResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    receiver: jspb.Message.getFieldWithDefault(msg, 1, ""),
    reqid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    failmsg: jspb.Message.getFieldWithDefault(msg, 4, ""),
    failtype: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cn.tursom.im.protobuf.SendMsgResponse}
 */
proto.cn.tursom.im.protobuf.SendMsgResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cn.tursom.im.protobuf.SendMsgResponse;
  return proto.cn.tursom.im.protobuf.SendMsgResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cn.tursom.im.protobuf.SendMsgResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cn.tursom.im.protobuf.SendMsgResponse}
 */
proto.cn.tursom.im.protobuf.SendMsgResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiver(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReqid(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailmsg(value);
      break;
    case 5:
      var value = /** @type {!proto.cn.tursom.im.protobuf.FailType} */ (reader.readEnum());
      msg.setFailtype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cn.tursom.im.protobuf.SendMsgResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cn.tursom.im.protobuf.SendMsgResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cn.tursom.im.protobuf.SendMsgResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.SendMsgResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReceiver();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReqid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getFailmsg();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFailtype();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * optional string receiver = 1;
 * @return {string}
 */
proto.cn.tursom.im.protobuf.SendMsgResponse.prototype.getReceiver = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cn.tursom.im.protobuf.SendMsgResponse} returns this
 */
proto.cn.tursom.im.protobuf.SendMsgResponse.prototype.setReceiver = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string reqId = 2;
 * @return {string}
 */
proto.cn.tursom.im.protobuf.SendMsgResponse.prototype.getReqid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cn.tursom.im.protobuf.SendMsgResponse} returns this
 */
proto.cn.tursom.im.protobuf.SendMsgResponse.prototype.setReqid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool success = 3;
 * @return {boolean}
 */
proto.cn.tursom.im.protobuf.SendMsgResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cn.tursom.im.protobuf.SendMsgResponse} returns this
 */
proto.cn.tursom.im.protobuf.SendMsgResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string failMsg = 4;
 * @return {string}
 */
proto.cn.tursom.im.protobuf.SendMsgResponse.prototype.getFailmsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cn.tursom.im.protobuf.SendMsgResponse} returns this
 */
proto.cn.tursom.im.protobuf.SendMsgResponse.prototype.setFailmsg = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional FailType failType = 5;
 * @return {!proto.cn.tursom.im.protobuf.FailType}
 */
proto.cn.tursom.im.protobuf.SendMsgResponse.prototype.getFailtype = function() {
  return /** @type {!proto.cn.tursom.im.protobuf.FailType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.cn.tursom.im.protobuf.FailType} value
 * @return {!proto.cn.tursom.im.protobuf.SendMsgResponse} returns this
 */
proto.cn.tursom.im.protobuf.SendMsgResponse.prototype.setFailtype = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cn.tursom.im.protobuf.ChatMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.cn.tursom.im.protobuf.ChatMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cn.tursom.im.protobuf.ChatMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.ChatMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    receiver: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sender: jspb.Message.getFieldWithDefault(msg, 2, ""),
    content: (f = msg.getContent()) && proto.cn.tursom.im.protobuf.MsgContent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cn.tursom.im.protobuf.ChatMsg}
 */
proto.cn.tursom.im.protobuf.ChatMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cn.tursom.im.protobuf.ChatMsg;
  return proto.cn.tursom.im.protobuf.ChatMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cn.tursom.im.protobuf.ChatMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cn.tursom.im.protobuf.ChatMsg}
 */
proto.cn.tursom.im.protobuf.ChatMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiver(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 3:
      var value = new proto.cn.tursom.im.protobuf.MsgContent;
      reader.readMessage(value,proto.cn.tursom.im.protobuf.MsgContent.deserializeBinaryFromReader);
      msg.setContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cn.tursom.im.protobuf.ChatMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cn.tursom.im.protobuf.ChatMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cn.tursom.im.protobuf.ChatMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.ChatMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReceiver();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContent();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cn.tursom.im.protobuf.MsgContent.serializeBinaryToWriter
    );
  }
};


/**
 * optional string receiver = 1;
 * @return {string}
 */
proto.cn.tursom.im.protobuf.ChatMsg.prototype.getReceiver = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cn.tursom.im.protobuf.ChatMsg} returns this
 */
proto.cn.tursom.im.protobuf.ChatMsg.prototype.setReceiver = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sender = 2;
 * @return {string}
 */
proto.cn.tursom.im.protobuf.ChatMsg.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cn.tursom.im.protobuf.ChatMsg} returns this
 */
proto.cn.tursom.im.protobuf.ChatMsg.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional MsgContent content = 3;
 * @return {?proto.cn.tursom.im.protobuf.MsgContent}
 */
proto.cn.tursom.im.protobuf.ChatMsg.prototype.getContent = function() {
  return /** @type{?proto.cn.tursom.im.protobuf.MsgContent} */ (
    jspb.Message.getWrapperField(this, proto.cn.tursom.im.protobuf.MsgContent, 3));
};


/**
 * @param {?proto.cn.tursom.im.protobuf.MsgContent|undefined} value
 * @return {!proto.cn.tursom.im.protobuf.ChatMsg} returns this
*/
proto.cn.tursom.im.protobuf.ChatMsg.prototype.setContent = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cn.tursom.im.protobuf.ChatMsg} returns this
 */
proto.cn.tursom.im.protobuf.ChatMsg.prototype.clearContent = function() {
  return this.setContent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cn.tursom.im.protobuf.ChatMsg.prototype.hasContent = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cn.tursom.im.protobuf.AllocateNodeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cn.tursom.im.protobuf.AllocateNodeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cn.tursom.im.protobuf.AllocateNodeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.AllocateNodeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    reqid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    mask: jspb.Message.getFieldWithDefault(msg, 2, 0),
    currentnodename: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cn.tursom.im.protobuf.AllocateNodeRequest}
 */
proto.cn.tursom.im.protobuf.AllocateNodeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cn.tursom.im.protobuf.AllocateNodeRequest;
  return proto.cn.tursom.im.protobuf.AllocateNodeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cn.tursom.im.protobuf.AllocateNodeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cn.tursom.im.protobuf.AllocateNodeRequest}
 */
proto.cn.tursom.im.protobuf.AllocateNodeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReqid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMask(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentnodename(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cn.tursom.im.protobuf.AllocateNodeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cn.tursom.im.protobuf.AllocateNodeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cn.tursom.im.protobuf.AllocateNodeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.AllocateNodeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReqid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMask();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCurrentnodename();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string reqId = 1;
 * @return {string}
 */
proto.cn.tursom.im.protobuf.AllocateNodeRequest.prototype.getReqid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cn.tursom.im.protobuf.AllocateNodeRequest} returns this
 */
proto.cn.tursom.im.protobuf.AllocateNodeRequest.prototype.setReqid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 mask = 2;
 * @return {number}
 */
proto.cn.tursom.im.protobuf.AllocateNodeRequest.prototype.getMask = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cn.tursom.im.protobuf.AllocateNodeRequest} returns this
 */
proto.cn.tursom.im.protobuf.AllocateNodeRequest.prototype.setMask = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string currentNodeName = 3;
 * @return {string}
 */
proto.cn.tursom.im.protobuf.AllocateNodeRequest.prototype.getCurrentnodename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cn.tursom.im.protobuf.AllocateNodeRequest} returns this
 */
proto.cn.tursom.im.protobuf.AllocateNodeRequest.prototype.setCurrentnodename = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cn.tursom.im.protobuf.AllocateNodeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cn.tursom.im.protobuf.AllocateNodeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cn.tursom.im.protobuf.AllocateNodeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.AllocateNodeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    reqid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    node: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cn.tursom.im.protobuf.AllocateNodeResponse}
 */
proto.cn.tursom.im.protobuf.AllocateNodeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cn.tursom.im.protobuf.AllocateNodeResponse;
  return proto.cn.tursom.im.protobuf.AllocateNodeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cn.tursom.im.protobuf.AllocateNodeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cn.tursom.im.protobuf.AllocateNodeResponse}
 */
proto.cn.tursom.im.protobuf.AllocateNodeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReqid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cn.tursom.im.protobuf.AllocateNodeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cn.tursom.im.protobuf.AllocateNodeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cn.tursom.im.protobuf.AllocateNodeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.AllocateNodeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReqid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNode();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string reqId = 1;
 * @return {string}
 */
proto.cn.tursom.im.protobuf.AllocateNodeResponse.prototype.getReqid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cn.tursom.im.protobuf.AllocateNodeResponse} returns this
 */
proto.cn.tursom.im.protobuf.AllocateNodeResponse.prototype.setReqid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 node = 2;
 * @return {number}
 */
proto.cn.tursom.im.protobuf.AllocateNodeResponse.prototype.getNode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cn.tursom.im.protobuf.AllocateNodeResponse} returns this
 */
proto.cn.tursom.im.protobuf.AllocateNodeResponse.prototype.setNode = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cn.tursom.im.protobuf.ListenBroadcastRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cn.tursom.im.protobuf.ListenBroadcastRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cn.tursom.im.protobuf.ListenBroadcastRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.ListenBroadcastRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    reqid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    channel: jspb.Message.getFieldWithDefault(msg, 2, 0),
    cancellisten: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cn.tursom.im.protobuf.ListenBroadcastRequest}
 */
proto.cn.tursom.im.protobuf.ListenBroadcastRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cn.tursom.im.protobuf.ListenBroadcastRequest;
  return proto.cn.tursom.im.protobuf.ListenBroadcastRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cn.tursom.im.protobuf.ListenBroadcastRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cn.tursom.im.protobuf.ListenBroadcastRequest}
 */
proto.cn.tursom.im.protobuf.ListenBroadcastRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReqid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChannel(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCancellisten(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cn.tursom.im.protobuf.ListenBroadcastRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cn.tursom.im.protobuf.ListenBroadcastRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cn.tursom.im.protobuf.ListenBroadcastRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.ListenBroadcastRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReqid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChannel();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCancellisten();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string reqId = 1;
 * @return {string}
 */
proto.cn.tursom.im.protobuf.ListenBroadcastRequest.prototype.getReqid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cn.tursom.im.protobuf.ListenBroadcastRequest} returns this
 */
proto.cn.tursom.im.protobuf.ListenBroadcastRequest.prototype.setReqid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 channel = 2;
 * @return {number}
 */
proto.cn.tursom.im.protobuf.ListenBroadcastRequest.prototype.getChannel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cn.tursom.im.protobuf.ListenBroadcastRequest} returns this
 */
proto.cn.tursom.im.protobuf.ListenBroadcastRequest.prototype.setChannel = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool cancelListen = 3;
 * @return {boolean}
 */
proto.cn.tursom.im.protobuf.ListenBroadcastRequest.prototype.getCancellisten = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cn.tursom.im.protobuf.ListenBroadcastRequest} returns this
 */
proto.cn.tursom.im.protobuf.ListenBroadcastRequest.prototype.setCancellisten = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cn.tursom.im.protobuf.ListenBroadcastResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cn.tursom.im.protobuf.ListenBroadcastResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cn.tursom.im.protobuf.ListenBroadcastResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.ListenBroadcastResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    reqid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cn.tursom.im.protobuf.ListenBroadcastResponse}
 */
proto.cn.tursom.im.protobuf.ListenBroadcastResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cn.tursom.im.protobuf.ListenBroadcastResponse;
  return proto.cn.tursom.im.protobuf.ListenBroadcastResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cn.tursom.im.protobuf.ListenBroadcastResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cn.tursom.im.protobuf.ListenBroadcastResponse}
 */
proto.cn.tursom.im.protobuf.ListenBroadcastResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReqid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cn.tursom.im.protobuf.ListenBroadcastResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cn.tursom.im.protobuf.ListenBroadcastResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cn.tursom.im.protobuf.ListenBroadcastResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.ListenBroadcastResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReqid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string reqId = 1;
 * @return {string}
 */
proto.cn.tursom.im.protobuf.ListenBroadcastResponse.prototype.getReqid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cn.tursom.im.protobuf.ListenBroadcastResponse} returns this
 */
proto.cn.tursom.im.protobuf.ListenBroadcastResponse.prototype.setReqid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool success = 2;
 * @return {boolean}
 */
proto.cn.tursom.im.protobuf.ListenBroadcastResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cn.tursom.im.protobuf.ListenBroadcastResponse} returns this
 */
proto.cn.tursom.im.protobuf.ListenBroadcastResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cn.tursom.im.protobuf.SendBroadcastRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cn.tursom.im.protobuf.SendBroadcastRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cn.tursom.im.protobuf.SendBroadcastRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.SendBroadcastRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    reqid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    channel: jspb.Message.getFieldWithDefault(msg, 2, 0),
    content: (f = msg.getContent()) && proto.cn.tursom.im.protobuf.MsgContent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cn.tursom.im.protobuf.SendBroadcastRequest}
 */
proto.cn.tursom.im.protobuf.SendBroadcastRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cn.tursom.im.protobuf.SendBroadcastRequest;
  return proto.cn.tursom.im.protobuf.SendBroadcastRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cn.tursom.im.protobuf.SendBroadcastRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cn.tursom.im.protobuf.SendBroadcastRequest}
 */
proto.cn.tursom.im.protobuf.SendBroadcastRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReqid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChannel(value);
      break;
    case 3:
      var value = new proto.cn.tursom.im.protobuf.MsgContent;
      reader.readMessage(value,proto.cn.tursom.im.protobuf.MsgContent.deserializeBinaryFromReader);
      msg.setContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cn.tursom.im.protobuf.SendBroadcastRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cn.tursom.im.protobuf.SendBroadcastRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cn.tursom.im.protobuf.SendBroadcastRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.SendBroadcastRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReqid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChannel();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getContent();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cn.tursom.im.protobuf.MsgContent.serializeBinaryToWriter
    );
  }
};


/**
 * optional string reqId = 1;
 * @return {string}
 */
proto.cn.tursom.im.protobuf.SendBroadcastRequest.prototype.getReqid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cn.tursom.im.protobuf.SendBroadcastRequest} returns this
 */
proto.cn.tursom.im.protobuf.SendBroadcastRequest.prototype.setReqid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 channel = 2;
 * @return {number}
 */
proto.cn.tursom.im.protobuf.SendBroadcastRequest.prototype.getChannel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cn.tursom.im.protobuf.SendBroadcastRequest} returns this
 */
proto.cn.tursom.im.protobuf.SendBroadcastRequest.prototype.setChannel = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional MsgContent content = 3;
 * @return {?proto.cn.tursom.im.protobuf.MsgContent}
 */
proto.cn.tursom.im.protobuf.SendBroadcastRequest.prototype.getContent = function() {
  return /** @type{?proto.cn.tursom.im.protobuf.MsgContent} */ (
    jspb.Message.getWrapperField(this, proto.cn.tursom.im.protobuf.MsgContent, 3));
};


/**
 * @param {?proto.cn.tursom.im.protobuf.MsgContent|undefined} value
 * @return {!proto.cn.tursom.im.protobuf.SendBroadcastRequest} returns this
*/
proto.cn.tursom.im.protobuf.SendBroadcastRequest.prototype.setContent = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cn.tursom.im.protobuf.SendBroadcastRequest} returns this
 */
proto.cn.tursom.im.protobuf.SendBroadcastRequest.prototype.clearContent = function() {
  return this.setContent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cn.tursom.im.protobuf.SendBroadcastRequest.prototype.hasContent = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cn.tursom.im.protobuf.SendBroadcastResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cn.tursom.im.protobuf.SendBroadcastResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cn.tursom.im.protobuf.SendBroadcastResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.SendBroadcastResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    reqid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    receivercount: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cn.tursom.im.protobuf.SendBroadcastResponse}
 */
proto.cn.tursom.im.protobuf.SendBroadcastResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cn.tursom.im.protobuf.SendBroadcastResponse;
  return proto.cn.tursom.im.protobuf.SendBroadcastResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cn.tursom.im.protobuf.SendBroadcastResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cn.tursom.im.protobuf.SendBroadcastResponse}
 */
proto.cn.tursom.im.protobuf.SendBroadcastResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReqid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReceivercount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cn.tursom.im.protobuf.SendBroadcastResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cn.tursom.im.protobuf.SendBroadcastResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cn.tursom.im.protobuf.SendBroadcastResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.SendBroadcastResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReqid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getReceivercount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string reqId = 1;
 * @return {string}
 */
proto.cn.tursom.im.protobuf.SendBroadcastResponse.prototype.getReqid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cn.tursom.im.protobuf.SendBroadcastResponse} returns this
 */
proto.cn.tursom.im.protobuf.SendBroadcastResponse.prototype.setReqid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool success = 2;
 * @return {boolean}
 */
proto.cn.tursom.im.protobuf.SendBroadcastResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cn.tursom.im.protobuf.SendBroadcastResponse} returns this
 */
proto.cn.tursom.im.protobuf.SendBroadcastResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional int32 receiverCount = 3;
 * @return {number}
 */
proto.cn.tursom.im.protobuf.SendBroadcastResponse.prototype.getReceivercount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cn.tursom.im.protobuf.SendBroadcastResponse} returns this
 */
proto.cn.tursom.im.protobuf.SendBroadcastResponse.prototype.setReceivercount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cn.tursom.im.protobuf.Broadcast.prototype.toObject = function(opt_includeInstance) {
  return proto.cn.tursom.im.protobuf.Broadcast.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cn.tursom.im.protobuf.Broadcast} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.Broadcast.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    reqid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    channel: jspb.Message.getFieldWithDefault(msg, 3, 0),
    content: (f = msg.getContent()) && proto.cn.tursom.im.protobuf.MsgContent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cn.tursom.im.protobuf.Broadcast}
 */
proto.cn.tursom.im.protobuf.Broadcast.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cn.tursom.im.protobuf.Broadcast;
  return proto.cn.tursom.im.protobuf.Broadcast.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cn.tursom.im.protobuf.Broadcast} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cn.tursom.im.protobuf.Broadcast}
 */
proto.cn.tursom.im.protobuf.Broadcast.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReqid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChannel(value);
      break;
    case 4:
      var value = new proto.cn.tursom.im.protobuf.MsgContent;
      reader.readMessage(value,proto.cn.tursom.im.protobuf.MsgContent.deserializeBinaryFromReader);
      msg.setContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cn.tursom.im.protobuf.Broadcast.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cn.tursom.im.protobuf.Broadcast.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cn.tursom.im.protobuf.Broadcast} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cn.tursom.im.protobuf.Broadcast.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReqid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChannel();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getContent();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cn.tursom.im.protobuf.MsgContent.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.cn.tursom.im.protobuf.Broadcast.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cn.tursom.im.protobuf.Broadcast} returns this
 */
proto.cn.tursom.im.protobuf.Broadcast.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string reqId = 2;
 * @return {string}
 */
proto.cn.tursom.im.protobuf.Broadcast.prototype.getReqid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cn.tursom.im.protobuf.Broadcast} returns this
 */
proto.cn.tursom.im.protobuf.Broadcast.prototype.setReqid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 channel = 3;
 * @return {number}
 */
proto.cn.tursom.im.protobuf.Broadcast.prototype.getChannel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cn.tursom.im.protobuf.Broadcast} returns this
 */
proto.cn.tursom.im.protobuf.Broadcast.prototype.setChannel = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional MsgContent content = 4;
 * @return {?proto.cn.tursom.im.protobuf.MsgContent}
 */
proto.cn.tursom.im.protobuf.Broadcast.prototype.getContent = function() {
  return /** @type{?proto.cn.tursom.im.protobuf.MsgContent} */ (
    jspb.Message.getWrapperField(this, proto.cn.tursom.im.protobuf.MsgContent, 4));
};


/**
 * @param {?proto.cn.tursom.im.protobuf.MsgContent|undefined} value
 * @return {!proto.cn.tursom.im.protobuf.Broadcast} returns this
*/
proto.cn.tursom.im.protobuf.Broadcast.prototype.setContent = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cn.tursom.im.protobuf.Broadcast} returns this
 */
proto.cn.tursom.im.protobuf.Broadcast.prototype.clearContent = function() {
  return this.setContent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cn.tursom.im.protobuf.Broadcast.prototype.hasContent = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * @enum {number}
 */
proto.cn.tursom.im.protobuf.FailType = {
  UNKNOWN: 0,
  IN_BLACKLIST: 1,
  TARGET_NOT_LOGIN: 2,
  MSG_SAVE_FAILURE: 3,
  TARGET_IS_EMPTY: 4,
  GROUP_NOT_EXIST: 5,
  GROUP_MUTED: 6,
  GROUP_USER_MUTED: 7,
  USER_NOT_IN_GROUP: 8
};

goog.object.extend(exports, proto.cn.tursom.im.protobuf);
